// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rafaelaloncofoggiatto.Models;

#nullable disable

namespace rafaelaloncofoggiatto.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241021230158_gcreate")]
    partial class gcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("rafaelaloncofoggiatto.Models.Folha", b =>
                {
                    b.Property<int>("folhaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ano")
                        .HasColumnType("INTEGER");

                    b.Property<int>("funcionarioIdid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("mes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("folhaId");

                    b.HasIndex("funcionarioIdid");

                    b.ToTable("Folhas");
                });

            modelBuilder.Entity("rafaelaloncofoggiatto.Models.Funcionario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("cpf")
                        .HasColumnType("TEXT");

                    b.Property<string>("nome")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("rafaelaloncofoggiatto.Models.Folha", b =>
                {
                    b.HasOne("rafaelaloncofoggiatto.Models.Funcionario", "funcionarioId")
                        .WithMany()
                        .HasForeignKey("funcionarioIdid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("funcionarioId");
                });
#pragma warning restore 612, 618
        }
    }
}
